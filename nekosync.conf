
## nekosync configuration file, v1.3

#
# Please choose a mirror!
#
# Note that only "descript.ion" and the packages themselves are directly
# accessed, so there is no mirroring of other files or HTML.
#
$mirror = 'http://nekoware.dustytech.net/current';
#$mirror = 'http://www.nekochan.net/nekoware/current';

#
# rsync mirror to use (if "rsync" is chosen over "get" as the method to use)
#
$rmirror = 'nekoware.dustytech.net::nekoware/current/*.tardist';
#$rmirror = 'nekoware.de::nekoware/current/*.tardist';
#$rmirror = 'rsync.nekochan.net::nekoware/current/*.tardist';

#
# Space-separated additional paths to download data from
# (e.g. "beta", or "incoming http://mymirror.tld/nekoware" )
# HTTP and FTP additional servers are supported.
#
# e.g. $extra = "beta http://www.nekochan.net/downloads/foetz";
#
# (Only in effect when *not* using rsync - if you use rsync, try
#  adjusting $rmirror and $rsyncargs)
#
$extra = "beta";

#
# Should nekosync check whether a more up to date release is available before
# downloading packages?
# (use the "--checkonly" command line option to check this and exit)
#
$updatecheck = TRUE;

#
# distloc is the location in which to save the downloaded packages;
# instloc is where the extracted components can be installed from.
#
$distloc = "/usr/tmp/nekoware/dist";
$instloc = "/usr/tmp/nekoware/inst";

#
# gnupath sets where to find sensible versions of standard tools,
# and the "bash" shell.  This can safely be set to anywhere that
# bash-2.05 or higher is installed, therefore generally '/usr/gnu/bin'
# or '/usr/nekoware/bin'.
#
$gnupath = '/usr/nekoware/bin';

#
# Should packages be fetched with $get (TRUE), or sync'd with $rsync (FALSE)?
#
$useget = TRUE;

#
# Output verbose (and mostly superfluous ;) additional information.
#
$verbose = FALSE;

##
## NB: To actually erase files, both $safe and $pretend must be FALSE
##

#
# Do not create distribution or installation directories, and don't
# erase/move files.
#
$safe = FALSE;

#
# Don't extract packages or erase/move obsolete files.
# This should only be enabled for debugging purposes.
#
$pretend = FALSE;

#
# If set to FALSE, then downloaded packages won't be unpacked - but obsolete
# files will still be dealt with.
#
# This is the preferred option for use on space-constrained systems where
# storing both the tardist archive and the contents separately is impractical.
#
$extract = TRUE;

#
# Move old packages to an "obsolete" directory (FALSE) or delete them (TRUE)?
# (Only when *not* using rsync)
#
$delete = FALSE;

#
# Customise display colours (on compatible terminals)
#
# The available colours are black, red, green, yellow, and blue.
# You can also use bold and nobold - but support for this varies.
#
#$bang    = "$red!";
#$dash    = "$yellow-";
#$dot     = "$blue.";
#$eroteme = "$yellow?";
#$plus    = "$green+";
#$star    = "$green*";

#
# Launch swmgr on completion?
#
$launchswmgr = TRUE;

#
# Delete or comment-out the following line to confirm that you have
# configured nekosync.  Pay special attention to the $safe and
# $pretend variables!
#
$configured = FALSE;


#
##
## The settings below will be correct for almost everyone - please don't alter
## them unless you know what you're doing!
##
#

#
# Which standard "tar", "wget", and "rsync" utilities should be used?
#
# ("wget" can be substituted with any alternative utility if
#  desired - but it must have wget's "-O" option to output
#  downloaded data to STDOUT)
#
#$tar   = "/usr/nekoware/bin/tar";
#$get   = "/usr/nekoware/bin/wget";
#$rsync = "/usr/nekoware/bin/rsync";

#
# Pass arguments to the "get" binary...
#
#$getargs = '-q --passive-ftp -nd -np -O';
#$gettimeout = '-t5 -T10';
#$getchecktimeout = '-t3 -T5';

#
# ...and additional options for the "rsync" binary.
#
#$rsyncargs = '-v -z --delete --recursive --progress';

# vi: set syntax=perl:
